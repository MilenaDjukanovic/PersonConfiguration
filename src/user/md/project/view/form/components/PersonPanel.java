/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user.md.project.view.form.components;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import user.md.project.view.components.validator.Validator;
import user.md.project.view.components.validator.impl.DateValidator;
import user.md.project.view.components.validator.impl.RequiredStringValidator;
import user.md.project.view.components.validator.impl.WordStringValidator;

/**
 *
 * @author mdjukanovic
 */
public class PersonPanel extends javax.swing.JPanel {

    Map<String, javax.swing.JPanel> allComponents = new HashMap<>();

    /**
     * Creates new form PersonPanel
     */
    public PersonPanel() {
        initComponents();
        prepareComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        inputLastnameTextField = new user.md.project.view.form.components.InputTextFieldPanel();
        inputFirstnameTextField = new user.md.project.view.form.components.InputTextFieldPanel();
        inputGenderTextField = new user.md.project.view.form.components.InputTextFieldPanel();
        inputGenderComboBox = new user.md.project.view.form.components.InputComboBoxPanel();
        inputMarriageComboBox = new user.md.project.view.form.components.InputComboBoxPanel();
        inputMarriageTextField = new user.md.project.view.form.components.InputTextFieldPanel();
        inputDateSeparate = new user.md.project.view.form.components.InputDateSeparatePanel();
        inputDateTextField = new user.md.project.view.form.components.InputTextFieldPanel();
        inputVegeterianRadioButton = new user.md.project.view.form.components.InputRadioButtonPanel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 460, 157, -1));
        add(inputLastnameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 410, -1));
        add(inputFirstnameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));
        add(inputGenderTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 400, -1));
        add(inputGenderComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, -1));
        add(inputMarriageComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, -1, -1));
        add(inputMarriageTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, -1, -1));
        add(inputDateSeparate, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, -1));
        add(inputDateTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, -1, -1));
        add(inputVegeterianRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String firstname = inputFirstnameTextField.getValue().toString();
            String lastname = inputLastnameTextField.getValue().toString();

            String gender;
            if (inputGenderComboBox.isVisible()) {
                gender = inputGenderComboBox.getValue().toString();
            } else {
                gender = inputGenderTextField.getValue().toString();
            }

            Date birthday;
            if (inputDateSeparate.isVisible()) {
                birthday = (Date) inputDateSeparate.getValue();
            } else {
                birthday = new SimpleDateFormat("dd/MM/yyyy").parse(inputDateTextField.getValue().toString());
            }

            String married;
            if (inputMarriageComboBox.isVisible()) {
                married = inputMarriageComboBox.getValue().toString();
            } else {
                married = inputMarriageTextField.getValue().toString();
            }

            String vegeterian = inputVegeterianRadioButton.getValue().toString();

            JOptionPane.showMessageDialog(this, "Ime: " + firstname + "\nPrezime: "
                    + lastname + "\nPol: " + gender + "\nDatum rodjenja: " + new SimpleDateFormat("dd.MM.yyyy").format(birthday)
                    + "\nMarried: " + married + "\nVegeterian: " + vegeterian);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Validacija nije uspjesna ");
        }

        clearAll();
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private user.md.project.view.form.components.InputDateSeparatePanel inputDateSeparate;
    private user.md.project.view.form.components.InputTextFieldPanel inputDateTextField;
    private user.md.project.view.form.components.InputTextFieldPanel inputFirstnameTextField;
    private user.md.project.view.form.components.InputComboBoxPanel inputGenderComboBox;
    private user.md.project.view.form.components.InputTextFieldPanel inputGenderTextField;
    private user.md.project.view.form.components.InputTextFieldPanel inputLastnameTextField;
    private user.md.project.view.form.components.InputComboBoxPanel inputMarriageComboBox;
    private user.md.project.view.form.components.InputTextFieldPanel inputMarriageTextField;
    private user.md.project.view.form.components.InputRadioButtonPanel inputVegeterianRadioButton;
    // End of variables declaration//GEN-END:variables

    private void prepareComponents() {
        prepareComponentsGeneral();
        fillMap();
        setDefaultVisibility();
    }

    private void prepareComponentsGeneral() {
        prepareFirstnameTextField();
        prepareLastnameTextField();
        prepareGenderComboBox();
        prepareGenderTextField();
        prepareMarriageComboBox();
        prepareMarriageTextField();
        prepareDateSeparate();
        prepareDateTextField();
        prepareVegeterianRadioButton();
    }

    private void setDefaultVisibility() {
        List<String> defaultComponentsToShow = new ArrayList<>();

        defaultComponentsToShow.add("FirstnameInputTextFieldPanel");
        defaultComponentsToShow.add("LastnameInputTextFieldPanel");
        defaultComponentsToShow.add("GenderInputTextFieldPanel");
        defaultComponentsToShow.add("MarriageInputTextFieldPanel");
        defaultComponentsToShow.add("BirthdayInputTextFieldPanel");
        defaultComponentsToShow.add("VegeterianInputRadioButtonPanel");

        changeVisibility(defaultComponentsToShow);;
    }

    private void fillMap() {
        allComponents.put("FirstnameInputTextFieldPanel", inputFirstnameTextField);

        allComponents.put("LastnameInputTextFieldPanel", inputLastnameTextField);

        allComponents.put("GenderInputTextFieldPanel", inputGenderTextField);
        allComponents.put("GenderInputComboBoxPanel", inputGenderComboBox);

        allComponents.put("MarriageInputTextFieldPanel", inputMarriageTextField);
        allComponents.put("MarriageInputComboBoxPanel", inputMarriageComboBox);

        allComponents.put("BirthdayInputTextFieldPanel", inputDateTextField);
        allComponents.put("BirthdayInputDateSeparatePanel", inputDateSeparate);

        allComponents.put("VegeterianInputRadioButtonPanel", inputVegeterianRadioButton);

    }

    private void prepareFirstnameTextField() {
        List<Validator> validators = new ArrayList<>();
        validators.add(new RequiredStringValidator());
        validators.add(new WordStringValidator());
        inputFirstnameTextField.prepareComponent("Firstname: ", "", validators);
    }

    private void prepareLastnameTextField() {
        List<Validator> validators = new ArrayList<>();
        validators.add(new RequiredStringValidator());
        validators.add(new WordStringValidator());
        inputLastnameTextField.prepareComponent("Lastname: ", "", validators);
    }

    private void prepareGenderTextField() {
        inputGenderTextField.prepareComponent("Gender: ", "", null);
    }

    private void prepareGenderComboBox() {
        List<String> options = new ArrayList<>();
        options.add("Female");
        options.add("Male");
        inputGenderComboBox.prepareComponent("Gender: ", "", options);
    }

    private void prepareMarriageTextField() {
        inputMarriageTextField.prepareComponent("Married: ", "", null);
    }

    private void prepareMarriageComboBox() {
        List<String> options = new ArrayList<>();
        options.add("Married");
        options.add("Single");
        inputMarriageComboBox.prepareComponent("Marriage: ", "", options);
    }

    private void prepareDateTextField() {
        inputDateTextField.prepareComponent("Birthday: ", "", null);
    }

    private void prepareDateSeparate() {
        inputDateSeparate.prepareComponent("Birthday: ", "", new DateValidator());
    }

    private void prepareVegeterianRadioButton() {
        inputVegeterianRadioButton.prepareComponent("Vegeterian: ", "", "Vegeterian", "Non-vegeterian");
    }

    void changeVisibility(List<String> componentsToShow) {
        allComponents.entrySet().forEach((entry) -> {
            entry.getValue().setVisible(componentsToShow.contains(entry.getKey()));
        });
        btnSave.setVisible(true);
    }

    private void clearAll() {
        prepareComponentsGeneral();
        inputFirstnameTextField.getTxtInputField().setText("");
        inputLastnameTextField.getTxtInputField().setText("");
        inputGenderTextField.getTxtInputField().setText("");
        inputMarriageTextField.getTxtInputField().setText("");
        inputDateTextField.getTxtInputField().setText("");
    }
}
