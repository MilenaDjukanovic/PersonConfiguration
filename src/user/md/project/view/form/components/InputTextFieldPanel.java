/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user.md.project.view.form.components;

import javax.swing.JLabel;
import javax.swing.JTextField;
import user.md.project.view.components.validator.Validator;
import java.util.List;
import user.md.project.view.components.exception.ValidationException;

/**
 *
 * @author mdjukanovic
 */
public class InputTextFieldPanel extends javax.swing.JPanel implements GetValue {

    private List<Validator> validators;

    /**
     * Creates new form InputTextFieldPanel
     */
    public InputTextFieldPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblText = new javax.swing.JLabel();
        txtInputField = new javax.swing.JTextField();
        lblErrorValue = new javax.swing.JLabel();

        lblText.setText("Text:");

        lblErrorValue.setForeground(new java.awt.Color(255, 51, 0));
        lblErrorValue.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblText, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblErrorValue)
                    .addComponent(txtInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorValue)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblErrorValue;
    private javax.swing.JLabel lblText;
    private javax.swing.JTextField txtInputField;
    // End of variables declaration//GEN-END:variables

    public JLabel getLblErrorValue() {
        return lblErrorValue;
    }

    public JLabel getLblText() {
        return lblText;
    }

    public JTextField getTxtInputField() {
        return txtInputField;
    }

    public void setValidators(List<Validator> validators) {
        this.validators = validators;
    }

    @Override
    public Object getValue() throws Exception {

        if (validators == null) {
            return txtInputField.getText();
        }

        for (Validator validator : validators) {
            try {
                validator.validate(txtInputField.getText());

            } catch (ValidationException ve) {
                lblErrorValue.setText(ve.getMessage());
                throw new Exception(ve.getMessage());
            }
        }
        return txtInputField.getText();
    }

    public void prepareComponent(String text, String errorValue, List<Validator> validators) {
        getLblText().setText(text);
        getLblErrorValue().setText(errorValue);
        setValidators(validators);
    }
}
